"""Первая миграция

Revision ID: dbfd21c978d9
Revises: 
Create Date: 2025-02-13 19:15:14.493035

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision: str = 'dbfd21c978d9'
down_revision: Union[str, None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index('ix_incident_discription', table_name='incident')
    op.drop_index('ix_incident_id', table_name='incident')
    op.drop_index('ix_incident_location', table_name='incident')
    op.drop_table('incident')
    op.drop_index('ix_user_id', table_name='user')
    op.drop_index('ix_user_name', table_name='user')
    op.drop_index('ix_user_organiztion', table_name='user')
    op.drop_index('ix_user_sername', table_name='user')
    op.drop_index('ix_user_username', table_name='user')
    op.drop_table('user')
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('user',
    sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('username', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('name', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('sername', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('organiztion', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('is_active', sa.BOOLEAN(), autoincrement=False, nullable=True),
    sa.Column('role', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.PrimaryKeyConstraint('id', name='user_pkey')
    )
    op.create_index('ix_user_username', 'user', ['username'], unique=True)
    op.create_index('ix_user_sername', 'user', ['sername'], unique=False)
    op.create_index('ix_user_organiztion', 'user', ['organiztion'], unique=False)
    op.create_index('ix_user_name', 'user', ['name'], unique=False)
    op.create_index('ix_user_id', 'user', ['id'], unique=False)
    op.create_table('incident',
    sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('description', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('location', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('created_at', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.PrimaryKeyConstraint('id', name='incident_pkey')
    )
    op.create_index('ix_incident_location', 'incident', ['location'], unique=False)
    op.create_index('ix_incident_id', 'incident', ['id'], unique=False)
    op.create_index('ix_incident_discription', 'incident', ['description'], unique=False)
    # ### end Alembic commands ###
